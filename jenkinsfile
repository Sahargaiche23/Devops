pipeline {
    agent any
    tools {
        jdk 'JDK17'
        maven 'Maven'
    }
      environment {
            SONAR_SCANNER = tool 'SonarQubeScanner'
        }

    stages {
        // Stage 1: Checkout (automatic in multibranch)
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // Stage 2: Build and Test
        stage('Build & Test') {
            steps {
                sh 'mvn clean package'
                junit 'target/surefire-reports/*.xml'
            }
        }
        stage('SonarQube Analysis') {
                    steps {
                        withSonarQubeEnv('SonarQube') {
                            sh """
                                ${SONAR_SCANNER}/bin/sonar-scanner \
                                -Dsonar.projectKey=devopsSecure \
                                -Dsonar.sources=. \
                                -Dsonar.java.binaries=target/classes \
                                -Dsonar.host.url=http://localhost:9000
                            """
                        }
                    }
                }

                stage('Quality Gate') {
                    steps {
                        timeout(time: 2, unit: 'MINUTES') {
                            waitForQualityGate abortPipeline: true
                        }
                    }
                }

    }
    post {
        always {
            cleanWs()
        }
    }
}