pipeline {
    agent any
    tools {
        jdk 'JDK17'
        maven 'Maven'
    }
    environment {
        SONAR_SCANNER = tool 'SonarQubeScanner'
        DOCKER_REGISTRY = '192.168.56.10:5000'

    }

    stages {
        // Stage 1: Checkout
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // Stage 2: Build
        stage('Build') {
            steps {
                sh 'mvn clean compile'
            }
        }

        // Stage 3: Test
        stage('Test') {
            steps {
                sh 'mvn test'
                junit 'target/surefire-reports/*.xml'
            }
        }

        // Stage 4: Package
        stage('Package') {
            steps {
                sh 'mvn package -DskipTests'
            }
        }

        // Stage 5: SonarQube Analysis
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh """
                        ${SONAR_SCANNER}/bin/sonar-scanner \
                        -Dsonar.projectKey=devopsSecure \
                        -Dsonar.sources=. \
                        -Dsonar.java.binaries=target/classes \
                        -Dsonar.host.url=http://localhost:9000
                    """
                }
            }
        }

        stage('Build Docker Image') {
                    steps {
                        script {
                            docker.build("${DOCKER_REGISTRY}/kaddem:0.0.1")
                        }
                    }
                }

                stage('Push to Docker Registry') {
                    steps {
                        script {
                            // First verify registry is accessible
                            sh "curl -I http://${DOCKER_REGISTRY}/v2/" || true

                            // Then login and push
                            withCredentials([usernamePassword(
                                credentialsId: 'docker-creds',
                                usernameVariable: 'DOCKER_USER',
                                passwordVariable: 'DOCKER_PASS'
                            )]) {
                                sh """
                                    docker login ${DOCKER_REGISTRY} \
                                        -u ${DOCKER_USER} \
                                        -p ${DOCKER_PASS}
                                    docker push ${DOCKER_REGISTRY}/kaddem:0.0.1
                                """
                            }
                        }
                    }
                }

    }

    post {
        always {
            cleanWs()
        }
    }
}