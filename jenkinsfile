pipeline {
    agent any
    tools {
        jdk 'JDK17'
        maven 'Maven'
        sonarQubeScanner 'SonarQubeScanner'
    }
        environment {
              SONAR_SCANNER_OPTS = "-Xmx512m"
          }

    stages {
        // Stage 1: Checkout (automatic in multibranch)
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        // Stage 2: Build and Test
        stage('Build & Test') {
            steps {
                sh 'mvn clean package'
                junit 'target/surefire-reports/*.xml'
            }
        }
        // Stage 3: SonarQube Analysis
         stage('SonarQube Analysis') {
                    steps {
                        withSonarQubeEnv('SonarQube') {
                            sh 'sonar-scanner -Dsonar.projectKey=devopsSecure -Dsonar.sources=. -Dsonar.java.binaries=target/classes'
                        }
                    }
                }

                stage('Quality Gate') {
                    steps {
                        timeout(time: 2, unit: 'MINUTES') {
                            waitForQualityGate abortPipeline: true
                        }
                    }
                }

    }
    post {
        always {
            cleanWs()
        }
    }
}